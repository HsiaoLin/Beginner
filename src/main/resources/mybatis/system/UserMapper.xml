<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserMapper">
	<sql id="userColumns">USERNAME,NAME,PASSWORD,RIGHTS,STATUS,ROLE_ID</sql>

	<resultMap type="User" id="userAndRoleResultMap">
		<id column="user_id" property="userId"/>
		<result column="user_type" property="userType"/>
		<result column="user_name" property="userName"/>
		<result column="user_password" property="userPassword"/>
		<result column="user_phone" property="userPhone"/>
		<result column="user_mail" property="userMail"/>
		<result column="user_status" property="userStatus"/>
		<result column="buyer_id" property="buyerId"/>
		<result column="supplier_id" property="supplierId"/>
		<result column="parent_id" property="parentId"/>
		<result column="last_login" property="lastLogin"/>
		<collection property="roleList"  ofType="Role">
            <id column="role_id" property="roleId"/>
            <result column="role_code" property="roleCode" />
            <result column="role_name" property="roleName"/>
            <result column="role_type" property="roleType"/>
            <result column="role_remark" property="roleRemark"/>
            <result column="is_valid" property="isValid"/>
      	</collection>
	</resultMap>
	<resultMap type="User" id="userResultMap">
		<id column="user_id" property="userId"/>
		<result column="user_type" property="userType"/>
		<result column="user_name" property="userName"/>
		<result column="user_password" property="userPassword"/>
		<result column="user_phone" property="userPhone"/>
		<result column="user_mail" property="userMail"/>
		<result column="user_status" property="userStatus"/>
		<result column="buyer_id" property="buyerId"/>
		<result column="supplier_id" property="supplierId"/>
		<result column="parent_id" property="parentId"/>
		<result column="last_login" property="lastLogin"/>
	</resultMap>
	
	<!-- 判断用户名和密码 -->
	<select id="getUserInfo" parameterType="User" resultType="User">
		select 
			u.user_id userId,          
			u.user_type userType,       
			u.user_name userName,          
			u.user_password userPassword,       
			u.user_phone userPhone,       
			u.user_mail userMail,       
			u.user_status userStatus,       
			u.buyer_id buyerId,        
			u.supplier_id supplierId,        
			u.parent_id parentId,  
			u.last_login lastLogin   
		from 
			platform_user u
		where 1=1
		<if test="userName!=null and userPassword!=null">
			and user_name = #{userName} 
			and user_password=#{userPassword}
		</if>
		<if test="userId!=null and userId>0">
			and userId = #{userId}
		</if>
	</select>
	<!-- 判断用户名和密码 -->
	<select id="getUserInfoEx" parameterType="pd" resultType="pd" useCache="false"><!-- insert update delete (flushCache="true/false") -->
		select 
			user_id userId,          
			user_type userType,
			user_name userName,  
			user_password userPassword,
			user_phone userPhone,      
			user_mail userMail, 
			user_status userStatus,       
			buyer_id  buyerId,       
			supplier_id supplierId,      
			parent_id parentId,  
			last_login lastLogin 
		from 
			platform_user 
		where 1=1
		<if test="USERNAME != null and PASSWORD != null">
	  	and	(
	  				(user_name = #{USERNAME} and user_password = #{PASSWORD})
	  			or
	  				(user_mail = #{USERNAME} and user_password = #{PASSWORD})
	  			or
	  				(user_phone = #{USERNAME} and user_password = #{PASSWORD})
	  		)
		</if>
		<if test="USER_ID != null and USER_ID != ''">
			and user_id = #{USER_ID}
		</if>
	</select>
	<!-- 查找所有的用户信息 -->
	<select id="userlistPage" resultType="pd" useCache="false"><!-- insert update delete (flushCache="true/false") -->
		select 
			user_id userId,          
			user_type userType,
			user_name userName,  
			user_password userPassword,
			user_phone userPhone,      
			user_mail userMail, 
			user_status userStatus,       
			buyer_id  buyerId,       
			supplier_id supplierId,      
			parent_id parentId,  
			last_login lastLogin 
		from 
			platform_user 
		where 1=1
	</select>
	<!-- 查找所有的用户信息 -->
	<select id="findById" resultType="pd" useCache="false"><!-- insert update delete (flushCache="true/false") -->
		select 
			user_id userId,          
			user_type userType,
			user_name userName,  
			user_password userPassword,
			user_phone userPhone,      
			user_mail userMail, 
			user_status userStatus,       
			buyer_id  buyerId,       
			supplier_id supplierId,      
			parent_id parentId,  
			last_login lastLogin 
		from 
			platform_user 
		where 
			1=1
		and 
			(
				user_id = #{userId} 
				or
				user_name = #{userId} 
				or
				user_phone = #{userId}
			)
	</select>
	<select id="getUserByName" parameterType="pd" resultType="pd" useCache="false"><!-- insert update delete (flushCache="true/false") -->
		select 
			user_id userId,          
			user_type userType,
			user_name userName,  
			user_password userPassword,
			user_phone userPhone,      
			user_mail userMail, 
			user_status userStatus,       
			buyer_id  buyerId,       
			supplier_id supplierId,      
			parent_id parentId,  
			last_login lastLogin 
		from 
			platform_user 
		where 1=1
		<if test="USERNAME != null">
	  	and	(
	  				(user_name = #{USERNAME})
	  			or
	  				(user_mail = #{USERNAME})
	  			or
	  				(user_phone = #{USERNAME})
	  		)
		</if>
		<if test="USER_ID != null and USER_ID != ''">
			and user_id = #{USER_ID}
		</if>
	</select>
	<select id="getUserAndRoleById" parameterType="String" resultMap="userAndRoleResultMap">
		select 
			*
		from 
			platform_user u
		left join
			platform_user_role ur
		on
			u.user_id=ur.user_id
		left join 
			platform_role r
		on
			r.role_id=ur.role_id
		where 
			u.user_id=#{userId}
	</select>
	
	<update id="updateLastLogin" parameterType="User">
		update 
			platform_user 
		set 
			last_login=#{LAST_LOGIN} 
		where user_id=#{userId}
	</update>
	<update id="updateUserStatus" parameterType="java.util.Map">
		update 
			platform_user 
		set 
			user_status='1'
		where user_id in  
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">  
		 #{item}  
		</foreach>  
	</update>
	<delete id="deleteUser" parameterType="java.util.Map">
		delete from platform_user 
		where user_id in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">  
		 #{item}  
		</foreach> 
	</delete>
	<insert id="addUser" parameterType="java.util.Map">
		insert into platform_user
		(
			user_type,
			user_name,
			user_password,
			user_phone,
			user_mail,
			user_status,
			buyer_id,
			supplier_id,
			parent_id,
			last_login
		)
		values
		(
			#{userType},
			#{userName},
			#{userPassword},
			#{userPhone},
			#{userMail},
			#{userStatus},
			#{buyerId},
			#{supplierId},
			#{parentId},
			#{lastLogin}
		)
	</insert>
	<update id="updateUser" parameterType="java.util.Map">
		update platform_user
		set
			user_name = #{userName}
			<if test="userType != null and userType !=''">
			,user_type = #{userType}
			</if>
			<if test="userPassword != null and userPassword !=''">
			,user_password = #{userPassword}
			</if>
			<if test="userPhone != null and userPhone !=''">
			,user_phone = #{userPhone}
			</if>
			<if test="userMail != null and userMail !=''">
			,user_mail = #{userMail}
			</if>
			<if test="userStatus != null and userStatus !=''">
			,user_status = #{userStatus}
			</if>
			<if test="buyerId != null and buyerId !=''">
			,buyer_id = #{buyerId}
			</if>
			<if test="supplierId != null and supplierId !=''">
			,supplier_id = #{supplierId}
			</if>
			<if test="parentId != null and parentId !=''">
			,parent_id = #{parentId}
			</if>
			<if test="lastLogin != null and lastLogin !=''">
			,last_login = #{lastLogin}
			</if>
		where 1=1
		and
			user_id = #{userId}
	</update>

</mapper>